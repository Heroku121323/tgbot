#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import aiosqlite
from config import DATABASE_PATH


async def view_database():
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    async with aiosqlite.connect(DATABASE_PATH) as db:
        print("üóÑÔ∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö TrueParts82\n")
        
        # –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        cursor = await db.execute('SELECT * FROM users')
        users = await cursor.fetchall()
        if users:
            for user in users:
                print(f"  ID: {user[0]}, Username: @{user[1]}, –ò–º—è: {user[2]}, –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user[4]}")
        else:
            print("  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç")
        
        print("\nüìã –ó–∞–∫–∞–∑—ã:")
        cursor = await db.execute('SELECT * FROM orders')
        orders = await cursor.fetchall()
        if orders:
            for order in orders:
                print(f"  –ó–∞–∫–∞–∑ #{order[0]}: {order[2]} | {order[3]} | –°—Ç–∞—Ç—É—Å: {order[6]}")
        else:
            print("  –ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç")
        
        print("\nüí¨ –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏:")
        cursor = await db.execute('SELECT * FROM support_messages')
        support = await cursor.fetchall()
        if support:
            for msg in support:
                print(f"  –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {msg[1]}: {msg[2][:50]}...")
        else:
            print("  –°–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–µ—Ç")


if __name__ == "__main__":
    asyncio.run(view_database())
